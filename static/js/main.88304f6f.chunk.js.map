{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","api.ts","components/FindMovie/FindMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","props","movie","className","src","Poster","alt","Title","Plot","MoviesList","movies","map","imdbID","getMovie","title","a","fetch","response","json","FindMovie","addMovie","useState","setTitle","titleError","setTitleError","setMovie","handleChangeInput","useCallback","event","target","value","findMovie","newMovie","htmlFor","type","id","placeholder","onChange","onClick","App","setMovies","every","prev","ReactDOM","render","document","getElementById"],"mappings":"wTAOaA,EAA6B,SAACC,GACzC,IAAQC,EAAUD,EAAVC,MAER,OACE,sBAAKC,UAAU,OAAf,UACE,qBAAKA,UAAU,aAAf,SACE,wBAAQA,UAAU,gBAAlB,SACE,qBACEC,IAAKF,EAAMG,OACXC,IAAI,kBAIV,sBAAKH,UAAU,eAAf,UACE,sBAAKA,UAAU,QAAf,UACE,qBAAKA,UAAU,aAAf,SACE,wBAAQA,UAAU,iBAAlB,SACE,qBACEC,IAAI,wBACJE,IAAI,aAIV,qBAAKH,UAAU,gBAAf,SACE,mBAAGA,UAAU,aAAb,SAA2BD,EAAMK,aAIrC,sBAAKJ,UAAU,UAAf,UACGD,EAAMM,KACP,iCC7BGC,EAA8B,SAACR,GAC1C,IAAQS,EAAWT,EAAXS,OAER,OACE,qBAAKP,UAAU,SAAf,SACGO,EAAOC,KAAI,SAAAT,GAAK,OACf,cAAC,EAAD,CAEEA,MAAOA,GADFA,EAAMU,c,uBCfRC,EAAQ,uCAAG,WAAOC,GAAP,eAAAC,EAAA,sEACCC,MAAM,8CAAD,OAA+CF,IADrD,cAChBG,EADgB,yBAGfA,EAASC,QAHM,2CAAH,sDCURC,G,MAA6B,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAC3C,EAA0BC,mBAAS,IAAnC,mBAAOP,EAAP,KAAcQ,EAAd,KACA,EAAoCD,oBAAS,GAA7C,mBAAOE,EAAP,KAAmBC,EAAnB,KACA,EAA0BH,mBAAuB,MAAjD,mBAAOnB,EAAP,KAAcuB,EAAd,KAEMC,EAAoBC,uBAAY,SACpCC,GAEAN,EAASM,EAAMC,OAAOC,SACrB,IAUGC,EAAS,uCAAG,4BAAAhB,EAAA,yDACXD,EADW,iEAKOD,EAASC,GALhB,WAKVkB,EALU,QAOFzB,MAPE,uBAQdiB,GAAc,GARA,0BAahBC,EAASO,GACTR,GAAc,GAdE,4CAAH,qDAiBf,OACE,qCACE,uBAAMrB,UAAU,aAAhB,UACE,sBAAKA,UAAU,QAAf,UACE,uBAAOA,UAAU,QAAQ8B,QAAQ,cAAjC,yBAIA,qBAAK9B,UAAU,UAAf,SACE,uBACE+B,KAAK,OACLC,GAAG,cACHC,YAAY,0BACZjC,UAAU,kBACV2B,MAAOhB,EACPuB,SAAUX,MAGbH,GACC,mBAAGpB,UAAU,iBAAb,qDAMJ,sBAAKA,UAAU,mBAAf,UACE,qBAAKA,UAAU,UAAf,SACE,wBACE+B,KAAK,SACL/B,UAAU,kBACVmC,QAASP,EAHX,4BASF,qBAAK5B,UAAU,UAAf,SACE,wBACE+B,KAAK,SACL/B,UAAU,oBACVmC,QAjES,WACfpC,IACFkB,EAASlB,GACToB,EAAS,IACTG,EAAS,QA0DH,qCAWN,sBAAKtB,UAAU,YAAf,UACE,oBAAIA,UAAU,QAAd,qBACCD,GACC,cAAC,EAAD,CAAWA,MAAOA,YC3FfqC,G,MAAU,WACrB,MAA4BlB,mBAAkB,IAA9C,mBAAOX,EAAP,KAAe8B,EAAf,KAQA,OACE,sBAAKrC,UAAU,OAAf,UACE,qBAAKA,UAAU,eAAf,SACE,cAAC,EAAD,CAAYO,OAAQA,MAEtB,qBAAKP,UAAU,UAAf,SACE,cAAC,EAAD,CAAWiB,SAZA,SAACY,GACZtB,EAAO+B,OAAM,SAAAvC,GAAK,OAAIA,EAAMU,SAAWoB,EAASpB,WAClD4B,GAAU,SAACE,GAAD,4BAAcA,GAAd,CAAoBV,iBCPpCW,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.88304f6f.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie;\n};\n\nexport const MovieCard: React.FC<Props> = (props) => {\n  const { movie } = props;\n\n  return (\n    <div className=\"card\">\n      <div className=\"card-image\">\n        <figure className=\"image is-4by3\">\n          <img\n            src={movie.Poster}\n            alt=\"Film logo\"\n          />\n        </figure>\n      </div>\n      <div className=\"card-content\">\n        <div className=\"media\">\n          <div className=\"media-left\">\n            <figure className=\"image is-48x48\">\n              <img\n                src=\"images/imdb-logo.jpeg\"\n                alt=\"imdb\"\n              />\n            </figure>\n          </div>\n          <div className=\"media-content\">\n            <p className=\"title is-8\">{movie.Title}</p>\n          </div>\n        </div>\n\n        <div className=\"content\">\n          {movie.Plot}\n          <br />\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = (props) => {\n  const { movies } = props;\n\n  return (\n    <div className=\"movies\">\n      {movies.map(movie => (\n        <MovieCard\n          key={movie.imdbID}\n          movie={movie}\n        />\n      ))}\n    </div>\n  );\n};\n","export const getMovie = async (title: string): Promise<Movie> => {\n  const response = await fetch(`https://www.omdbapi.com/?apikey=2b90500e&t=${title}`);\n\n  return response.json();\n};\n","import React, { useCallback, useState } from 'react';\nimport { getMovie } from '../../api';\nimport { MovieCard } from '../MovieCard';\n\nimport './FindMovie.scss';\n\ntype Props = {\n  addMovie: (newMovie: Movie) => void;\n};\n\nexport const FindMovie: React.FC<Props> = ({ addMovie }) => {\n  const [title, setTitle] = useState('');\n  const [titleError, setTitleError] = useState(false);\n  const [movie, setMovie] = useState<Movie | null>(null);\n\n  const handleChangeInput = useCallback((\n    event: React.ChangeEvent<HTMLInputElement>,\n  ) => {\n    setTitle(event.target.value);\n  }, []);\n\n  const handleSubmit = () => {\n    if (movie) {\n      addMovie(movie);\n      setTitle('');\n      setMovie(null);\n    }\n  };\n\n  const findMovie = async () => {\n    if (!title) {\n      return;\n    }\n\n    const newMovie = await getMovie(title);\n\n    if (!newMovie.Title) {\n      setTitleError(true);\n\n      return;\n    }\n\n    setMovie(newMovie);\n    setTitleError(false);\n  };\n\n  return (\n    <>\n      <form className=\"find-movie\">\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className=\"input is-danger\"\n              value={title}\n              onChange={handleChangeInput}\n            />\n          </div>\n          {titleError && (\n            <p className=\"help is-danger\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-light\"\n              onClick={findMovie}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-primary\"\n              onClick={handleSubmit}\n            >\n              Add to the list\n            </button>\n          </div>\n        </div>\n      </form>\n\n      <div className=\"container\">\n        <h2 className=\"title\">Preview</h2>\n        {movie && (\n          <MovieCard movie={movie} />\n        )}\n      </div>\n    </>\n  );\n};\n","import { FC, useState } from 'react';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\n\nimport './App.scss';\n\nexport const App: FC = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n\n  const addMovie = (newMovie: Movie) => {\n    if (movies.every(movie => movie.imdbID !== newMovie.imdbID)) {\n      setMovies((prev) => [...prev, newMovie]);\n    }\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <FindMovie addMovie={addMovie} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}